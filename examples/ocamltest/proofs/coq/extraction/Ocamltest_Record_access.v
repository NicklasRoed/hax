(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.

(* NotImplementedYet *)

Record t_Point : Type :=
  {
    f_x : t_i32;
    f_y : t_i32;
  }.
Arguments t_Point:clear implicits.
Arguments t_Point.
Arguments Build_t_Point.
#[export] Instance settable_t_Point : Settable _ :=
  settable! (@Build_t_Point) <f_x; f_y>.

Definition main (_ : unit) : unit :=
  let origo := Build_t_Point (0, 0) in
  let origo := Build_origo (2) in
  tt.
