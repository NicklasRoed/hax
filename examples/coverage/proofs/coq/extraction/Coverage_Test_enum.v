(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.

(* NotImplementedYet *)

Inductive test__t_Foo `{v_T : Type} `{v_N : t_usize} `{t_Sized (v_T)} : Type :=
| C_test__Foo_Bar : t_u8 -> _
| C_test__Foo_Baz
| test__f_x : v_Ttest__f_y : t_Array (v_T) (v_N)test__f_z : t_u8;.
Arguments test__t_Foo:clear implicits.
Arguments test__t_Foo (_) (_) {_}.

Inductive test__t_AnimalA : Type :=
| C_test__AnimalA_Dog
| C_test__AnimalA_Cat.
Arguments test__t_AnimalA:clear implicits.
Arguments test__t_AnimalA.

Definition test__t_AnimalA_cast_to_repr (x : test__t_AnimalA) : t_isize :=
  match x with
  | C_test__AnimalA_Dog =>
    0
  | C_test__AnimalA_Cat =>
    1
  end.

Inductive test__t_AnimalB : Type :=
| C_test__AnimalB_Dog : t_String -> float -> _
| test__f_name : t_Stringtest__f_weight : float;.
Arguments test__t_AnimalB:clear implicits.
Arguments test__t_AnimalB.

Inductive test__t_Examples : Type :=
| C_test__Examples_UnitLike
| C_test__Examples_TupleLike : t_i32 -> _
| test__f_value : t_i32;.
Arguments test__t_Examples:clear implicits.
Arguments test__t_Examples.

Definition test (_ : unit) : unit :=
  let x : test__t_Foo ((t_u8)) (12) := C_test__Foo_Baz in
  let _ := tt in
  let a : test__t_AnimalA := C_test__AnimalA_Dog in
  let a := C_test__AnimalA_Cat in
  let _ := tt in
  let a : test__t_AnimalB := C_test__AnimalB_Dog (f_to_string ("Cocoa"%string), 37.2%float) in
  let a := TODO: please implement the method `expr'_Construct_inductive [is_record=true, is_struct = false] todo record` in
  let _ := tt in
  let x := C_test__Examples_UnitLike in
  let x := C_test__Examples_UnitLike in
  let y := C_test__Examples_TupleLike (123) in
  let y := C_test__Examples_TupleLike (123) in
  let z := TODO: please implement the method `expr'_Construct_inductive [is_record=true, is_struct = false] todo record` in
  let _ := tt in
  tt.

From Coverage Require Import Examples.
Export Examples.

Inductive test__t_Enum : Type :=
| C_test__Enum_Unit
| C_test__Enum_Tuple : t_u16 -> _
| test__f_a : t_u8test__f_b : t_u16;.
Arguments test__t_Enum:clear implicits.
Arguments test__t_Enum.

Definition test__Enum_Unit__anon_const_0 : t_u8 :=
  3.

Definition test__Enum_Struct__anon_const_0 : t_u8 :=
  1.
